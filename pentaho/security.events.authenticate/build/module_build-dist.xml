<?xml version="1.0" encoding="UTF-8"?>
<project name="module_build-dist" default="compile.module.build-dist">
  <dirname property="module.build-dist.basedir" file="module_build-dist.xml"/>
  
  <property name="module.jdk.home.build-dist" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.build-dist" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.build-dist" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.build-dist" value="-encoding UTF-8 -source 1.8 -target 1.8 ${compiler.args}"/>
  
  <property name="build-dist.output.dir" value="${basedir}/../out"/>

  <path id="build-dist.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="build-dist.module.production.classpath">
    <path refid="${module.jdk.classpath.build-dist}"/>
    <path refid="library.pentaho-lib.classpath"/>
    <path refid="library.tomcat-lib.classpath"/>
  </path>
  
  <path id="build-dist.runtime.production.module.classpath">
    <pathelement location="${build-dist.output.dir}"/>
    <path refid="library.pentaho-lib.classpath"/>
    <path refid="library.tomcat-lib.classpath"/>
  </path>
  
  <path id="build-dist.module.classpath">
    <path refid="${module.jdk.classpath.build-dist}"/>
    <pathelement location="${build-dist.output.dir}"/>
    <path refid="library.pentaho-lib.classpath"/>
    <path refid="library.tomcat-lib.classpath"/>
  </path>
  
  <path id="build-dist.runtime.module.classpath">
    <pathelement location="${build-dist.testoutput.dir}"/>
    <pathelement location="${build-dist.output.dir}"/>
    <path refid="library.pentaho-lib.classpath"/>
    <path refid="library.tomcat-lib.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.build-dist">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.build-dist">
    <patternset refid="excluded.from.module.build-dist"/>
  </patternset>
  
  <path id="build-dist.module.sourcepath">
    <dirset dir="${module.build-dist.basedir}/../">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.build-dist" depends="compile.module.build-dist.production" description="Compile module build-dist"/>
  
  <target name="compile.module.build-dist.production" description="Compile module build-dist; production classes">
    <mkdir dir="${build-dist.output.dir}"/>
    <javac destdir="${build-dist.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.build-dist}/javac">
      <compilerarg line="${compiler.args.build-dist}"/>
      <bootclasspath refid="build-dist.module.bootclasspath"/>
      <classpath refid="build-dist.module.classpath"/>
      <src refid="build-dist.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.build-dist"/>
    </javac>
    
    <copy todir="${build-dist.output.dir}">
      <fileset dir="${basedir}/../src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>

  <target name="clean.module.build-dist" description="cleanup module">
    <delete dir="${build-dist.output.dir}"/>
  </target>
</project>